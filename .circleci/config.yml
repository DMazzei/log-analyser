version: 2.1
orbs:
  ruby: circleci/ruby@0.1.2

defaults: &defaults
  working_directory: ~/log-analyser
  docker:
    - image: circleci/ruby:2.7.1
  executor: ruby/default

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
        keys:
          - gems-{{ checksum "log-analyser.gemspec" }}-{{ checksum ".travis.yml"}}
          - gems
      - run:
          shell: /bin/bash -l
          command: |
            rvm use 2.7 --default
            bundle check || bundle install
            bundle exec wwtd --only-bundle
      - save_cache:
          key: gems-{{ checksum "log-analyser.gemspec" }}-{{ checksum ".travis.yml"}}
          paths:
            - /usr/local/rvm/gems
      - run:
          name: Validate that gemspec is up-to-date
          shell: /bin/bash -l
          command: |
            # Running it twice, as a single run does not feed manifest changes into the gemspec
            bundle exec rake build
            bundle exec rake build
            export gemspec_changes="$(git diff -- ruby-utilities.gemspec | egrep '(s\.version|s\.files)')"
            if [ "$gemspec_changes" != "" ]; then
              echo "'bundle exec rake build' caused gemspec changes"
              echo "Please run the command locally and commit the changes."
              echo $gemspec_changes
              exit 1
            fi
      - run:
          name: Download test reporter
          shell: /bin/bash -l
          command: |
            curl -Lo ./cc-test-reporter https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64
            chmod +x ./cc-test-reporter
      - run:
          name: Run tests and report to code climate
          shell: /bin/bash -l
          command: |
            ./cc-test-reporter before-build
            bundle exec wwtd
            ./cc-test-reporter after-build -t simplecov --exit-code $?
      - store_artifacts:
          path: ./coverage

  rubocop:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Which bundler?
          command: bundle -v
      - ruby/bundle-install
      - run:
          name: run Rubocop
          command: bundle exec rubocop --parallel
      - save_cache:
          key: rubocop-v2-parallel-{{ .Branch }}-{{ .BuildNum }}
          paths:
            - tmp/rubocop_cache

  rspec:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Which bundler?
          command: bundle -v
      - ruby/bundle-install

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

            bundle exec rspec --format progress \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            $TEST_FILES
      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
